#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
# @Version:  Python 3.11.4
# @Software: Sublime Text 4
# @Author:   StudentCWZ
# @Email:    StudentCWZ@outlook.com
# @Date:     2023-01-06 10:32:46
# @Last Modified by: StudentCWZ
# @Last Modified time: 2023-01-06 10:33:20
# @Description: auth controller
"""

# Generated by CodiumAI

import pytest


class TestAuthDao:
    # Tests that a user can successfully login with a valid username and password
    def test_successful_login_with_valid_username_and_password(self):
        from unittest.mock import patch
        from application.dao import AuthDao
        from application.utils.response import success_api
        from application.models import User
        from werkzeug.security import generate_password_hash

        # create a user with a hashed password
        user = User(username='test_user', password=generate_password_hash('test_password'))
        user.save()

        # mock the create_access_token function
        with patch('application.dao.create_access_token') as mock_create_access_token:
            mock_create_access_token.return_value = 'access_token'

            # call the login function with valid credentials
            result = AuthDao.login('test_user', 'test_password')

            # assert that the result is a success_api response with an access_token and refresh_token
            assert result == success_api(data={'access_token': 'access_token', 'refresh_token': 'access_token'})
